% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/MTM.R
\name{MTM}
\alias{MTM}
\title{Fits a (Bayesian) Multivariate Gaussian Mixed Effects Model using a Gibbs
Sampler.}
\usage{
MTM(Y, Xf = NULL, K = NULL, resCov = list(type = "UN", df0 = 0, S0 =
  diag(0, ncol(as.matrix(Y)))), nIter = 110, burnIn = 10, thin = 2,
  saveAt = "", tolD = 1e-05)
}
\arguments{
\item{Y}{Phenotype matrix (nxp numeric, traits (p) in columns, individuals
(n) in rows).}

\item{Xf}{A numeric design matrix (nxq) for fixed effects. For factors use
Xf=as.matrix(model.matrix(~x+y...))[, -1].}

\item{K}{A 2-level list, 1st level defines random effects, inside each level
a list is used to provide the kernel (K), a covariance structure (type,
'UN', 'DIAG', 'FA' supported) and hyper-parameters (degree of freedom, df0,
and scale, S0).}

\item{resCov}{A list used to define the co-variance matrix for model
residuals (R0). Example: resCov=list(type='UN', df0=x, S0=V) specifies an
un-structured covariance matrix, with an Inverse Whishart prior with degree
of freedom df0 (scalar) and scale matrix (pxp) V.}

\item{nIter}{The number of iterations (integer).}

\item{burnIn}{The number of iterations to be discarded as burn-in (integer).}

\item{thin}{Thinin interval (integer).}

\item{saveAt}{A character path and a prefix used to define where to store
samples (e.g., saveAt=c:/mtmFit/test_'. By default samples are saved in the
current directory and filenames have no prefix.}

\item{tolD}{A numeric parameter used to define the minimum eigenvalue to be
maintained in the model. Eigenvectors of kernels smaller than tolD are
removed. The default value is tolD=1e-6.}
}
\value{
A list containing estimated posterior means and estimated posterior
  standard deviations, including: $yHat...
}
\description{
Data equation: Y = 1mu' + XB + U1 + ... + Uq + E \cr\cr where: \itemize{
\item{Y (numeric, nxp) is a matrix of phenotypes (individuals in rows, traits
in columns, NAs accepted),} \item{mu is a vector of (p) intercepts (included
by default),} \item{X (nxq) is an incidence matrix for q fixed effects,}
\item{B (qxp) is a matrix of fixed effects,} \item{U1, ..., Uq are (nxq)
matrices of random effects with vec(Uj)~N(0, kronecker(Gj,Kj)), where Gj is a
pxp (unknown) co-variance matrix, and Kj is an nxn user-defined covariance
matrix (kernel) which must by numeric, symmetric positive semi-definite,}
\item{E (nxp) is a matrix of model residuals, assumed to follow a MVN
distribution vec(E)~N(0, kronecker(R0, I)).} }
}
\details{
Intercepts are included by default, fixed and random effects are optional.
The same fixed effects are applied to all traits. For each random effect the
user must provide a kernel (K). By default the residual co-variance matrix
(R0) and the co-variance matrices of random effects are un-structured;
however users can specify other models (e.g., DIAG=diagonal, FA=factor
analysis, and REC=recursive).
}
\examples{
\dontrun{
library(BGLR)

data(wheat)
G <- tcrossprod(scale(wheat.X, center = TRUE, scale = TRUE)) / ncol(wheat.X)

nTraits <- ncol(wheat.Y)
df0 <- 3
R2 <- 0.5

# K is similar to ETA in BGLR, but only for RKHS in the case of this program.
# One can provide K or EVD via V and d, I believe. Use much longer chains, this
# is just an example!
fm <- MTM(Y = wheat.Y,
          K = list(list(K = G, COV = list(type = "UN", df0 = (df0 + nTraits),
                S0 = diag(R2 * (df0 + 2 * nTraits + 1), nTraits)))),
          resCov = list(type = "DIAG", df0 = rep(df0, nTraits),
                S0 = diag(R2 * df0/(df0 + 2), nTraits)),
          nIter = 500,
          burnIn = 100)

# Some estimates
fm$K[[1]]$G  # Estimated genomic covariance matrix
fm$K[[1]]$U  # Predicted genomic values
fm$resCov$R  # Estimated residual covariance matrix
}
}

